parameters:
  - name: 'FolderName'
    type: string
    default: './targetproject2'

  - name: 'ConnectionString'
    type: string
    default: 'Data Source=127.0.0.1,5001;Initial Catalog=test;User ID=sa;Password=Strong_password_123!;Integrated Security=false;Trust Server Certificate=true'
  
  - name: 'TimeoutInMinutes'
    type: number
    default: 20

  - name: 'NugetConfigPath'
    type: string
    default: '$(System.DefaultWorkingDirectory)/nuget.config'

  - name: 'VmImage'
    type: string
    default: 'ubuntu-latest'

  - name: 'SolutionPath'
    type: string
    default: 'DbUp-POC.sln'

  - name: 'ProjectName'
    type: string
    default: 'TestProject'
  
jobs:
  - job: 'Database_Upgrade_${{ parameters.ProjectName }}'
    displayName: 'Database_Upgrade_${{ parameters.ProjectName }}'
    timeoutInMinutes: '${{ parameters.TimeoutInMinutes }}'
    cancelTimeoutInMinutes: 2
    pool: MyPool
    steps:
      - checkout: self
        fetchDepth: 0

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet restore'
        inputs:
          command: 'restore'
          projects: |
            ${{ parameters.SolutionPath }}
          restoreArguments: '--locked-mode'
          feedsToUse: 'config'
          nugetConfigPath: '${{ parameters.NugetConfigPath }}'
          verbosityRestore: 'Minimal'

      - task: DotNetCoreCLI@2
        displayName: 'Build solution'
        inputs:
          command: 'build'
          projects: '${{ parameters.SolutionPath }}'

      - publish: $(System.DefaultWorkingDirectory)/bin/WebApp
        artifact: 'databaseUpdater'
      
      - task: PowerShell@2
        displayName: 'Run upgrade application'
        inputs:
          filePath: '$(Pipeline.Workspace)\databaseUpdater\DbUp-POC.exe'
          arguments: 'upgrade -c ${{ parameters.ConnectionString }} -f ${{ parameters.FolderName }}'