USE [cabs_production]
GO
/****** Object:  StoredProcedure [cabs_spsv].[GetLetterDlXml]    Script Date: 8/9/2024 9:49:48 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER procedure [cabs_spsv].[GetLetterDlXml]
	@LetterId int
as
begin
	declare @LetterDataEntryXml nvarchar(max);	
	set @LetterDataEntryXml = 
	(
	select
			letter.LicenceNumber as 'DriverLicenceNumber'
			,letter.FirstName as 'DriverLicenceHolderFirstName'
			,letter.LastName as 'DriverLicenceHolderLastName'
			,letter.DriverAddress1 as 'DriverLicenceHolderAddress1'
			,letter.DriverAddress2 as 'DriverLicenceHolderAddress2'
			,letter.DriverAddress3 as 'DriverLicenceHolderAddress3'
			,letter.Town as 'DriverLicenceHolderTown'
			,letter.DriverCounty as 'DriverLicenceHolderCounty'
			,letter.DriverPostCode as 'DriverLicenceHolderPostcode'
			,letter.ExpiryDate as 'DriverLicenceExpireDate'
			,letter.LicenceStatus as 'DriverLicenceStatus'
			,letter.VehicleLicenceNumber as 'VehicleLicenceNumber'
			,letter.VehicleRegistrationNumber as 'VehicleRegistrationNumber'
			,letter.LinkStartDate as 'LinkStartDate'
			,letter.LinkEndDate as 'LinkEndDate'
			,letter.LinkMethod as 'LinkMethod'
			,letter.LetterRequestTypeVLAuditId as 'LetterTemplateAuditId'
			,letter.CreatedDate as 'CreatedOn'
			,letter.RentalStartDate as 'RentalStartDate'
			,letter.RentalEndDate as 'RentalEndDate'
			,letter.RentalMethod as 'RentalMethod'
			,letter.SPSVWebUrl as 'SpsvWebUrl'
			,letter.SPSVRegistrationNumber as 'SpsvRegistrationNumber'
			,letter.SPSVRegistrationUrl as 'SpsvInvitationUrl'
			,letter.SPSVEmailHtml as 'SpsvEmailHtml'
			,letter.HistoricalVehicleLicenceNumber as 'HistoricalVehicleLicenceNumber'
			,letter.SPSVSmsMessage as 'SpsvSmsMessage'
		from dl.LetterRequestMaster letter
		where letter.LetterRequestMasterId = @LetterId
		for xml path(''),
		root('LetterDataEntry')
	)
	select @LetterDataEntryXml as LetterDataEntryXml;
end

